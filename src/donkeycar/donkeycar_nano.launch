<launch>
  <!-- ====================== Overall Params ============================ -->
  <!-- Command Line Arguments -->
  <arg name="kit" default="nano" />                       <!-- The name of the kit used on the car -->
  <arg name="mode" default="manual" />                    <!-- Driving mode of the car (manual, auto) -->

  <!-- ====================== Logitech F710 joystick ==================== -->
  <!-- Command Line Arguments -->
  <arg name="js_name" default="jetson_joy_f710" />             <!-- The device special file name of F710 -->
  <arg name="js_device" default="/dev/input/js0" />             <!-- The device special file name of F710 -->

  <!-- Make arguments available to parameter server -->

  <!-- Start the Joy node -->
  <node pkg="joy" type="joy_node" name="jetson_joy_f710">
    <param name="joy_node/dev" type="string" value="$(arg js_device)" />
    <remap from="/joy_node/dev" to="$(arg js_name)/joy_node/dev" />
  </node>

  <!-- ====================== Zed Stereo camera ======================== -->
  <!-- Command Line Arguments -->
  <arg name="svo_file"             default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
  <arg name="stream"               default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

  <arg name="node_name"            default="zed_node" />
  <arg name="camera_model"         default="zedm" /> <!-- 'zed' or 'zedm' -->
  <arg name="publish_urdf"         default="true" />

  <group ns="zed">
        <include file="$(find zed_wrapper)/launch/zed_camera.launch">
            <arg name="svo_file"            value="$(arg svo_file)" />
            <arg name="stream"              value="$(arg stream)" />
            <arg name="node_name"           value="$(arg node_name)" />
            <arg name="camera_model"        value="$(arg camera_model)" />
            <arg name="publish_urdf"        value="$(arg publish_urdf)" />            
        </include>
  </group>

  <!-- ====================== Slamtec RPLidar ========================== -->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
    <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  <!-- ====================== PI CSI Camera ============================ -->
  <!-- Command Line Arguments -->
  <arg name="sensor_id" default="0" />                       <!-- The sensor id of the camera -->
  <arg name="mono_cam_name" default="csi_cam_$(arg sensor_id)" /> <!-- The name of the camera (corrsponding to the camera info) -->
  <arg name="frame_id" default="/$(arg mono_cam_name)_link" />    <!-- The TF frame ID. -->
  <arg name="sync_sink" default="true" />                    <!-- Synchronize the app sink. Setting this to false may resolve problems with sub-par framerates. -->
  <arg name="width" default="640" />                         <!-- Image Width -->
  <arg name="height" default="480" />                        <!-- Image Height -->
  <arg name="fps" default="21" />                            <!-- Desired framerate. True framerate may not reach this if set too high. -->

  <!-- Make arguments available to parameter server -->
  <param name="$(arg mono_cam_name)/camera_id" type="int" value="$(arg sensor_id)" />
  <param name="$(arg mono_cam_name)/image_width" type="int" value="$(arg width)" />
  <param name="$(arg mono_cam_name)/image_height" type="int" value="$(arg height)" />
  <param name="$(arg mono_cam_name)/target_fps" type="int" value="$(arg fps)" />

  <env name="GSCAM_CONFIG" value="nvarguscamerasrc sensor-id=$(arg sensor_id) ! video/x-raw(memory:NVMM),
    width=(int)$(arg width), height=(int)$(arg height), format=(string)NV12, framerate=(fraction)$(arg fps)/1 ! 
    nvvidconv flip-method=0 ! video/x-raw, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR" />

  <!-- Start the GSCAM node -->
  <node pkg="gscam" type="gscam" name="$(arg mono_cam_name)">
    <param name="camera_name" value="$(arg mono_cam_name)" />
    <param name="frame_id" value="$(arg frame_id)" />
    <param name="sync_sink" value="$(arg sync_sink)" />
    <remap from="camera/image_raw" to="$(arg mono_cam_name)/image_raw" />
    <remap from="/set_camera_info" to="$(arg mono_cam_name)/set_camera_info" />
  </node>

  <!-- **** COMMENTED STUFF **** -->
  <!--include file="$(find rospy_tutorials)/003_listener_with_user_data/listener_with_user_data.launch" /-->

  <!-- Make arguments available to parameter server -->
  <!--param name="$(arg mono_cam_name)/camera_id" type="int" value="$(arg sensor_id)" /-->

  <!--env name="GSCAM_CONFIG" value="nvarguscamerasrc sensor-id=$(arg sensor_id) ! video/x-raw(memory:NVMM),
    width=(int)$(arg width), height=(int)$(arg height), format=(string)NV12, framerate=(fraction)$(arg fps)/1 ! 
    nvvidconv flip-method=0 ! video/x-raw, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR" /-->

</launch>
